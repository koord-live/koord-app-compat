name: Build hacked webview jars

on:
  pull_request:
    branches:
      - webviewjars

jobs:
  buildjars:
    runs-on: ubuntu-latest
    steps:
      - name:                       Checkout code
        id:                         codecheck
        uses:                       actions/checkout@v2

      - name:                       Create Release
        # if:                         true
        id:                         create-release
        uses:                       ncipollo/release-action@v1
        with:
          draft:                    true
          token:                    ${{ secrets.GITHUB_TOKEN }}
      
      - name:                       Build Webview jars
        id:                         webviewjar
        run:                        ./autobuild/webview_jars.sh
        env:
          GITHUB_TOKEN:             ${{ secrets.GITHUB_TOKEN }}
        
      - name:                       Post-Build for jar build
        id:                         get-artifacts
        run:                        ./autobuild/webview_jars.sh get-artifacts

      - name:                       Upload Artifact 1 to Job
        uses:                       actions/upload-artifact@v2
        with:
          name:                     ${{ steps.get-artifacts.outputs.artifact_1 }}
          path:                     deploy/${{ steps.get-artifacts.outputs.artifact_1 }}
          retention-days:           31
          if-no-files-found:        error

      - name:                       Upload Artifact 2 to Job
        uses:                       actions/upload-artifact@v2
        with:
          name:                     ${{ steps.get-artifacts.outputs.artifact_2 }}
          path:                     deploy/${{ steps.get-artifacts.outputs.artifact_2 }}
          retention-days:           31
          if-no-files-found:        error

      - name:                       Upload Jar 1 to Release
        id:                         upload-release-asset1
        uses:                       actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN:             ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:               ${{ needs.create_release.outputs.upload_url }}
          asset_path:               deploy/${{ steps.get-artifacts.outputs.artifact_1 }}
          asset_name:               ${{ steps.get-artifacts.outputs.artifact_1 }}
          asset_content_type:       application/octet-stream

      - name:                       Upload Jar 2 to Release
        id:                         upload-release-asset2
        uses:                       actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN:             ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:               ${{ needs.create_release.outputs.upload_url }}
          asset_path:               deploy/${{ steps.get-artifacts.outputs.artifact_2 }}
          asset_name:               ${{ steps.get-artifacts.outputs.artifact_2 }}
          asset_content_type:       application/octet-stream